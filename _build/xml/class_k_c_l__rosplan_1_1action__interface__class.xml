<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_k_c_l__rosplan_1_1action__interface__class" kind="class" language="C++" prot="public">
    <compoundname>KCL_rosplan::action_interface_class</compoundname>
    <basecompoundref prot="public" virt="non-virtual">RPActionInterface</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_k_c_l__rosplan_1_1action__interface__class_1ad068891618f1664ad175cfc159094595" prot="private" static="no" mutable="no">
        <type>ros::NodeHandle</type>
        <definition>ros::NodeHandle KCL_rosplan::action_interface_class::nh</definition>
        <argsstring></argsstring>
        <name>nh</name>
        <briefdescription>
<para>node handle </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="170" column="17" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_c_l__rosplan_1_1action__interface__class_1a6acbccaccf744b135b0748275202afba" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KCL_rosplan::action_interface_class::init_node</definition>
        <argsstring></argsstring>
        <name>init_node</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>if the node has been initialised or not </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="173" column="6" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_c_l__rosplan_1_1action__interface__class_1ad14d158016a87ec934502428c2d1d433" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string KCL_rosplan::action_interface_class::action_name</definition>
        <argsstring></argsstring>
        <name>action_name</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
<para>tne name of the action implemented by this node </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="176" column="13" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_c_l__rosplan_1_1action__interface__class_1acb45bcd09ebdc4924db9461d1347ab8d" prot="private" static="no" mutable="no">
        <type>ros::ServiceClient</type>
        <definition>ros::ServiceClient KCL_rosplan::action_interface_class::cl_nav</definition>
        <argsstring></argsstring>
        <name>cl_nav</name>
        <briefdescription>
<para><ref refid="namespacego__to__point" kindref="compound">go_to_point</ref> client </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="179" column="20" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_c_l__rosplan_1_1action__interface__class_1aba70a580c5fee7b9f028497e33e34bda" prot="private" static="no" mutable="no">
        <type>ros::ServiceClient</type>
        <definition>ros::ServiceClient KCL_rosplan::action_interface_class::cl_manip</definition>
        <argsstring></argsstring>
        <name>cl_manip</name>
        <briefdescription>
<para>manipulation client </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="182" column="20" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_c_l__rosplan_1_1action__interface__class_1a42e318fb636e4548cf28563a938e9065" prot="private" static="no" mutable="no">
        <type>ros::ServiceClient</type>
        <definition>ros::ServiceClient KCL_rosplan::action_interface_class::cl_get_id</definition>
        <argsstring></argsstring>
        <name>cl_get_id</name>
        <briefdescription>
<para>get_id client </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="185" column="20" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_c_l__rosplan_1_1action__interface__class_1acbaf1bee6385e9045c596ae7086d3040" prot="private" static="no" mutable="no">
        <type>ros::ServiceClient</type>
        <definition>ros::ServiceClient KCL_rosplan::action_interface_class::cl_mark</definition>
        <argsstring></argsstring>
        <name>cl_mark</name>
        <briefdescription>
<para>mark_wrong_id client </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="188" column="20" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_c_l__rosplan_1_1action__interface__class_1a02da37e1c3bb176c3f09a562ae553301" prot="private" static="no" mutable="no">
        <type>ros::ServiceClient</type>
        <definition>ros::ServiceClient KCL_rosplan::action_interface_class::cl_solution</definition>
        <argsstring></argsstring>
        <name>cl_solution</name>
        <briefdescription>
<para>oracle solution client </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="191" column="20" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_k_c_l__rosplan_1_1action__interface__class_1a12264d3782e783c9f938d7741fa15af8" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, geometry_msgs::Point &gt;</type>
        <definition>std::map&lt;std::string, geometry_msgs::Point&gt; KCL_rosplan::action_interface_class::wps</definition>
        <argsstring></argsstring>
        <name>wps</name>
        <briefdescription>
<para>waypoints </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="194" column="10" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="194" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_k_c_l__rosplan_1_1action__interface__class_1afd577106fac9210ebf3d646b3fa278cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KCL_rosplan::action_interface_class::action_interface_class</definition>
        <argsstring>()</argsstring>
        <name>action_interface_class</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>class constructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="84" column="1" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="84" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_k_c_l__rosplan_1_1action__interface__class_1a95031d82d5d29999785684a7633ccddd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KCL_rosplan::action_interface_class::concreteCallback</definition>
        <argsstring>(const rosplan_dispatch_msgs::ActionDispatch::ConstPtr &amp;msg)</argsstring>
        <name>concreteCallback</name>
        <param>
          <type>const rosplan_dispatch_msgs::ActionDispatch::ConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>action callback </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="108" column="6" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="108" bodyend="121"/>
        <references refid="class_k_c_l__rosplan_1_1action__interface__class_1a5e0ca921b7190a7eb69805f9c3aae9a5" compoundref="action__interface_8cpp" startline="145" endline="165">exec_action</references>
        <references refid="class_k_c_l__rosplan_1_1action__interface__class_1a2af139a1c70bcef5dd5bbe2241b40f09" compoundref="action__interface_8cpp" startline="124" endline="142">setup_node</references>
      </memberdef>
      <memberdef kind="function" id="class_k_c_l__rosplan_1_1action__interface__class_1a2af139a1c70bcef5dd5bbe2241b40f09" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KCL_rosplan::action_interface_class::setup_node</definition>
        <argsstring>()</argsstring>
        <name>setup_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>action initialiser dispatcher </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="124" column="6" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="124" bodyend="142"/>
        <references refid="action__interface_8cpp_1a7413401b40b075490286cc2d28fa6dee" compoundref="action__interface_8cpp" startline="70">CHECK_CONSISTENT_HYPO</references>
        <references refid="action__interface_8cpp_1aa69a2751821fe07e1faea957e42c9180" compoundref="action__interface_8cpp" startline="64">GATHER_HINT</references>
        <references refid="action__interface_8cpp_1afbc16abf7fcce6f53cf8977d76c78ece" compoundref="action__interface_8cpp" startline="58">GO_TO_WP</references>
        <references refid="action__interface_8cpp_1afe4664cca95c5e9b93e4a25874bc871d" compoundref="action__interface_8cpp" startline="55">LEAVE_TEMPLE</references>
        <references refid="action__interface_8cpp_1a6f47e7b691fe6f78786eb95f849f33ea" compoundref="action__interface_8cpp" startline="73">QUERY_HYPO</references>
        <references refid="action__interface_8cpp_1ab348801e93c20ce28d21d673571cbeb5" compoundref="action__interface_8cpp" startline="67">REACH_TEMPLE</references>
        <references refid="action__interface_8cpp_1a905f67ab58312915d0c5d40847c80c0c" compoundref="action__interface_8cpp" startline="61">SHIFT_GRIPPER</references>
        <referencedby refid="class_k_c_l__rosplan_1_1action__interface__class_1a95031d82d5d29999785684a7633ccddd" compoundref="action__interface_8cpp" startline="108" endline="121">concreteCallback</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_k_c_l__rosplan_1_1action__interface__class_1a5e0ca921b7190a7eb69805f9c3aae9a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KCL_rosplan::action_interface_class::exec_action</definition>
        <argsstring>(const rosplan_dispatch_msgs::ActionDispatch::ConstPtr &amp;msg)</argsstring>
        <name>exec_action</name>
        <param>
          <type>const rosplan_dispatch_msgs::ActionDispatch::ConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>action execution dispatcher </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="145" column="6" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="145" bodyend="165"/>
        <references refid="action__interface_8cpp_1a7413401b40b075490286cc2d28fa6dee" compoundref="action__interface_8cpp" startline="70">CHECK_CONSISTENT_HYPO</references>
        <references refid="action__interface_8cpp_1aa69a2751821fe07e1faea957e42c9180" compoundref="action__interface_8cpp" startline="64">GATHER_HINT</references>
        <references refid="action__interface_8cpp_1afbc16abf7fcce6f53cf8977d76c78ece" compoundref="action__interface_8cpp" startline="58">GO_TO_WP</references>
        <references refid="action__interface_8cpp_1afe4664cca95c5e9b93e4a25874bc871d" compoundref="action__interface_8cpp" startline="55">LEAVE_TEMPLE</references>
        <references refid="action__interface_8cpp_1a6f47e7b691fe6f78786eb95f849f33ea" compoundref="action__interface_8cpp" startline="73">QUERY_HYPO</references>
        <references refid="action__interface_8cpp_1ab348801e93c20ce28d21d673571cbeb5" compoundref="action__interface_8cpp" startline="67">REACH_TEMPLE</references>
        <references refid="action__interface_8cpp_1a905f67ab58312915d0c5d40847c80c0c" compoundref="action__interface_8cpp" startline="61">SHIFT_GRIPPER</references>
        <referencedby refid="class_k_c_l__rosplan_1_1action__interface__class_1a95031d82d5d29999785684a7633ccddd" compoundref="action__interface_8cpp" startline="108" endline="121">concreteCallback</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_k_c_l__rosplan_1_1action__interface__class_1a37e916143bff2e842afc3dceb6da692e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KCL_rosplan::action_interface_class::leave_temple_setup</definition>
        <argsstring>()</argsstring>
        <name>leave_temple_setup</name>
        <briefdescription>
<para>setup action leave_temple </para>
        </briefdescription>
        <detaileddescription>
<para>This function allows the robot to leave the starting position to reach the following waypoint</para>
<para><simplesect kind="note"><para>For &quot;starting position&quot; we refer to the starting position of the robot (where it is spawned), coinciding with the temple location.</para>
</simplesect>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="215" column="6" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="215" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="class_k_c_l__rosplan_1_1action__interface__class_1a326c547a150a16f42739a162e8d6d7e1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KCL_rosplan::action_interface_class::leave_temple_action</definition>
        <argsstring>(const rosplan_dispatch_msgs::ActionDispatch::ConstPtr &amp;msg)</argsstring>
        <name>leave_temple_action</name>
        <param>
          <type>const rosplan_dispatch_msgs::ActionDispatch::ConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>leave temple execution </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="222" column="6" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="222" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="class_k_c_l__rosplan_1_1action__interface__class_1abb6ade799c69dee192521d97e5219c75" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KCL_rosplan::action_interface_class::go_to_wp_setup</definition>
        <argsstring>()</argsstring>
        <name>go_to_wp_setup</name>
        <briefdescription>
<para>action <ref refid="namespacego__to__point" kindref="compound">go_to_point</ref> setup </para>
        </briefdescription>
        <detaileddescription>
<para>this function is devoted to the initialisation of the service clients</para>
<para><simplesect kind="note"><para>For &quot;starting position&quot; we refer to the starting position of the robot (where it is spawned), coinciding with the temple location.</para>
</simplesect>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="258" column="6" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="258" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="class_k_c_l__rosplan_1_1action__interface__class_1aeed667f1cd4164217e86c8012e4dedbe" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KCL_rosplan::action_interface_class::go_to_wp_action</definition>
        <argsstring>(const rosplan_dispatch_msgs::ActionDispatch::ConstPtr &amp;msg)</argsstring>
        <name>go_to_wp_action</name>
        <param>
          <type>const rosplan_dispatch_msgs::ActionDispatch::ConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>go_to_wp action execution </para>
        </briefdescription>
        <detaileddescription>
<para>once the target waypoint has been assigned, it allows detectibot to move from the current waypoint (less meaningful) toward the next waypoint (more meaningful). Then it retrieves the coordinates associated to the waypoint. It sets the ROS parameters des_pos_x and des_pos_y. It then call the service <linebreak/>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>[rosplan_dispatch_msgs/ActionDispatch] it is the action dispath message, defined by a name, a specific identifier a plan identifier and other fields</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Bool True value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="279" column="6" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="279" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="class_k_c_l__rosplan_1_1action__interface__class_1adf3ff4b2fbd3bec5dc52b2596e7361c0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KCL_rosplan::action_interface_class::shift_gripper_setup</definition>
        <argsstring>()</argsstring>
        <name>shift_gripper_setup</name>
        <briefdescription>
<para>action shift_gripper setup </para>
        </briefdescription>
        <detaileddescription>
<para>this function is devoted to the initialisation of the service clients</para>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="305" column="6" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="305" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="class_k_c_l__rosplan_1_1action__interface__class_1a078eef1e588742d598555ff3bc3e5944" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KCL_rosplan::action_interface_class::shift_gripper_action</definition>
        <argsstring>(const rosplan_dispatch_msgs::ActionDispatch::ConstPtr &amp;msg)</argsstring>
        <name>shift_gripper_action</name>
        <param>
          <type>const rosplan_dispatch_msgs::ActionDispatch::ConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>shift_gripper action execution </para>
        </briefdescription>
        <detaileddescription>
<para>this function allows the detectibot&apos;s gripper to move close to the marker so that <ref refid="namespacecluedo__kb" kindref="compound">cluedo_kb</ref> node can retrieve the hint via topic. Then, the boolean message field &quot;data&quot; indicating the fulfillment of the action (i.e. the activation of the gripper) is set to True and a service call takes place</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>[rosplan_dispatch_msgs/ActionDispatch] it is the action dispath message, defined by a name, a specific identifier a plan identifier and other fields</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Bool True value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="326" column="6" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="326" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="class_k_c_l__rosplan_1_1action__interface__class_1a4f47b988cb397c7eab47a954aca80e57" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KCL_rosplan::action_interface_class::gather_hint_setup</definition>
        <argsstring>()</argsstring>
        <name>gather_hint_setup</name>
        <briefdescription>
<para>action gather_hint setup </para>
        </briefdescription>
        <detaileddescription>
<para>this function is devoted to the initialisation of the service clients</para>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="354" column="6" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="354" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="class_k_c_l__rosplan_1_1action__interface__class_1a312f6a27d3f5e652d6d7cf101f79a01e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KCL_rosplan::action_interface_class::gather_hint_action</definition>
        <argsstring>(const rosplan_dispatch_msgs::ActionDispatch::ConstPtr &amp;msg)</argsstring>
        <name>gather_hint_action</name>
        <param>
          <type>const rosplan_dispatch_msgs::ActionDispatch::ConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>gather_hint action execution </para>
        </briefdescription>
        <detaileddescription>
<para>this function pull backs the robot&apos;s gripper. In the meantime, <ref refid="namespacecluedo__kb" kindref="compound">cluedo_kb</ref> receoves the hint. Hence the SetBool message field data is set to &quot;false&quot; and a service call takes place</para>
<para><simplesect kind="note"><para>the service employed for this action is the same employed for the &quot; shift_gripper &quot; one. The only differemce is that the data message field is set to &quot;false&quot;</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>[rosplan_dispatch_msgs/ActionDispatch] it is the action dispath message, defined by a name, a specific identifier a plan identifier and other fields</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Bool True value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="377" column="6" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="377" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="class_k_c_l__rosplan_1_1action__interface__class_1a50c53d86b82e10e2b920bad8c0f697a5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KCL_rosplan::action_interface_class::reach_temple_setup</definition>
        <argsstring>()</argsstring>
        <name>reach_temple_setup</name>
        <briefdescription>
<para>action reach_temple setup </para>
        </briefdescription>
        <detaileddescription>
<para>this function is devoted to the initialisation of the service clients</para>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="402" column="6" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="402" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="class_k_c_l__rosplan_1_1action__interface__class_1adba2c9c01fd73133d1e2a0e0fd9b992a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KCL_rosplan::action_interface_class::reach_temple_action</definition>
        <argsstring>(const rosplan_dispatch_msgs::ActionDispatch::ConstPtr &amp;msg)</argsstring>
        <name>reach_temple_action</name>
        <param>
          <type>const rosplan_dispatch_msgs::ActionDispatch::ConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>reaach_temple action execution </para>
        </briefdescription>
        <detaileddescription>
<para>once the target waypoint has been assigned, it allows detectibot to move from the current waypoint (less meaningful) toward the temple. Then it retrieves the coordinates associated to the waypoint. It sets the ROS parameters des_pos_x and des_pos_y aaccordingly. Hence, a service call takes place</para>
<para><simplesect kind="note"><para>the temple coordomates correspond to the &quot;center&quot; of the sceme (where) our robot get spawned, initially</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>[rosplan_dispatch_msgs/ActionDispatch] it is the action dispath message, defined by a name, a specific identifier a plan identifier and other fields</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Bool True value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="427" column="6" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="427" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="class_k_c_l__rosplan_1_1action__interface__class_1a45258636dac508ff314caaf79c8d1e13" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KCL_rosplan::action_interface_class::check_consistent_hypo_setup</definition>
        <argsstring>()</argsstring>
        <name>check_consistent_hypo_setup</name>
        <briefdescription>
<para>action check_consistency setup </para>
        </briefdescription>
        <detaileddescription>
<para>this function is devoted to the initialisation of the service clients</para>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="453" column="6" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="453" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="class_k_c_l__rosplan_1_1action__interface__class_1a7bb0e9eebb0f905f947bb1513919e5c2" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KCL_rosplan::action_interface_class::check_consistent_hypo_action</definition>
        <argsstring>(const rosplan_dispatch_msgs::ActionDispatch::ConstPtr &amp;msg)</argsstring>
        <name>check_consistent_hypo_action</name>
        <param>
          <type>const rosplan_dispatch_msgs::ActionDispatch::ConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>check_consistent_hypo execution </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="459" column="6" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="459" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="class_k_c_l__rosplan_1_1action__interface__class_1a5087a1854c5e1c54d7be896ba6d7209c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KCL_rosplan::action_interface_class::query_hypo_setup</definition>
        <argsstring>()</argsstring>
        <name>query_hypo_setup</name>
        <briefdescription>
<para>action query_hypo setup </para>
        </briefdescription>
        <detaileddescription>
<para>this function is devoted to the initialisation of the service clients</para>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="479" column="6" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="479" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="class_k_c_l__rosplan_1_1action__interface__class_1aed41605d09fcd4d22c86495ed37c466c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KCL_rosplan::action_interface_class::query_hypo_action</definition>
        <argsstring>(const rosplan_dispatch_msgs::ActionDispatch::ConstPtr &amp;msg)</argsstring>
        <name>query_hypo_action</name>
        <param>
          <type>const rosplan_dispatch_msgs::ActionDispatch::ConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>query_hypo action execution </para>
        </briefdescription>
        <detaileddescription>
<para>this function allows Detectibot to ask for some consistent hypothesis. If they do not exist yet, it returns &quot;false&quot; otherwise a client call to the get_id server takes place. Hence, a check to understand whether or not the ID is compatible with the one provided by the oracle, is performed.<itemizedlist>
<listitem><para>If they are not compatible, a service call to report the wrongness of the ID is made and a replan occurs.</para>
</listitem><listitem><para>If they results compatible instead, signal that True ID has been found and the game ends</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="note"><para>the service employed for this action is the same employed for the &quot; shift_gripper &quot; one. The only differemce is that the data message field is set to &quot;false&quot;</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>[rosplan_dispatch_msgs/ActionDispatch] it is the action dispath message, defined by a name, a specific identifier a plan identifier and other fields</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Bool True value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="514" column="6" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="514" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="class_k_c_l__rosplan_1_1action__interface__class_1aab6590616018a9a01eda609701e74459" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string KCL_rosplan::action_interface_class::action_to_string</definition>
        <argsstring>(const rosplan_dispatch_msgs::ActionDispatch::ConstPtr &amp;msg)</argsstring>
        <name>action_to_string</name>
        <param>
          <type>const rosplan_dispatch_msgs::ActionDispatch::ConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>action data to string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="563" column="13" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="563" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="class_k_c_l__rosplan_1_1action__interface__class_1a38fbf2132c258e2db53d8528c8b3d283" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KCL_rosplan::action_interface_class::navigate_to</definition>
        <argsstring>(std::string wp)</argsstring>
        <name>navigate_to</name>
        <param>
          <type>std::string</type>
          <declname>wp</declname>
        </param>
        <briefdescription>
<para>pilot the robot toward a certain position </para>
        </briefdescription>
        <detaileddescription>
<para>it retrieves the waypoint coordinates and it sets the target ones within the rosparameter server.</para>
<para><simplesect kind="note"><para>(0,0) are the coordinates for the temple&apos;s location <linebreak/>
</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">wp</parametername>
</parameternamelist>
<parameterdescription>
<para>String value that holds the target point</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erl_assignment_2/src/action_interface.cpp" line="590" column="6" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="590" bodyend="604"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KCL_rosplan::action_interface_class</label>
        <link refid="class_k_c_l__rosplan_1_1action__interface__class"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>RPActionInterface</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KCL_rosplan::action_interface_class</label>
        <link refid="class_k_c_l__rosplan_1_1action__interface__class"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>RPActionInterface</label>
      </node>
    </collaborationgraph>
    <location file="erl_assignment_2/src/action_interface.cpp" line="81" column="1" bodyfile="erl_assignment_2/src/action_interface.cpp" bodystart="80" bodyend="605"/>
    <listofallmembers>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1afd577106fac9210ebf3d646b3fa278cd" prot="public" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>action_interface_class</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1ad14d158016a87ec934502428c2d1d433" prot="private" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>action_name</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1aab6590616018a9a01eda609701e74459" prot="private" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>action_to_string</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1a7bb0e9eebb0f905f947bb1513919e5c2" prot="private" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>check_consistent_hypo_action</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1a45258636dac508ff314caaf79c8d1e13" prot="private" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>check_consistent_hypo_setup</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1a42e318fb636e4548cf28563a938e9065" prot="private" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>cl_get_id</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1aba70a580c5fee7b9f028497e33e34bda" prot="private" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>cl_manip</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1acbaf1bee6385e9045c596ae7086d3040" prot="private" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>cl_mark</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1acb45bcd09ebdc4924db9461d1347ab8d" prot="private" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>cl_nav</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1a02da37e1c3bb176c3f09a562ae553301" prot="private" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>cl_solution</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1a95031d82d5d29999785684a7633ccddd" prot="public" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>concreteCallback</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1a5e0ca921b7190a7eb69805f9c3aae9a5" prot="public" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>exec_action</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1a312f6a27d3f5e652d6d7cf101f79a01e" prot="private" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>gather_hint_action</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1a4f47b988cb397c7eab47a954aca80e57" prot="private" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>gather_hint_setup</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1aeed667f1cd4164217e86c8012e4dedbe" prot="private" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>go_to_wp_action</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1abb6ade799c69dee192521d97e5219c75" prot="private" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>go_to_wp_setup</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1a6acbccaccf744b135b0748275202afba" prot="private" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>init_node</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1a326c547a150a16f42739a162e8d6d7e1" prot="private" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>leave_temple_action</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1a37e916143bff2e842afc3dceb6da692e" prot="private" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>leave_temple_setup</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1a38fbf2132c258e2db53d8528c8b3d283" prot="private" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>navigate_to</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1ad068891618f1664ad175cfc159094595" prot="private" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>nh</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1aed41605d09fcd4d22c86495ed37c466c" prot="private" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>query_hypo_action</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1a5087a1854c5e1c54d7be896ba6d7209c" prot="private" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>query_hypo_setup</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1adba2c9c01fd73133d1e2a0e0fd9b992a" prot="private" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>reach_temple_action</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1a50c53d86b82e10e2b920bad8c0f697a5" prot="private" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>reach_temple_setup</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1a2af139a1c70bcef5dd5bbe2241b40f09" prot="public" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>setup_node</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1a078eef1e588742d598555ff3bc3e5944" prot="private" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>shift_gripper_action</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1adf3ff4b2fbd3bec5dc52b2596e7361c0" prot="private" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>shift_gripper_setup</name></member>
      <member refid="class_k_c_l__rosplan_1_1action__interface__class_1a12264d3782e783c9f938d7741fa15af8" prot="private" virt="non-virtual"><scope>KCL_rosplan::action_interface_class</scope><name>wps</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
