<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="_oracle_8rst_8txt" kind="file" language="C++">
    <compoundname>Oracle.rst.txt</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_oracle_8rst_8txt_1a9082c3d01dfdff845db35ba873e06318" prot="public" static="no" mutable="no">
        <type>Code docs *simulation cpp to simulate a disturbance in the hint recognition by the sensing part *the field <ref refid="simulation_8cpp_1a0049a8a39c319bf1470f36c9e0f75abd" kindref="member">key</ref> could be empty *the field value vould be empty *the field <ref refid="simulation_8cpp_1a0049a8a39c319bf1470f36c9e0f75abd" kindref="member">key</ref> could</type>
        <definition>Code docs* simulation cpp to simulate a disturbance in the hint recognition by the sensing part* the field key could be empty* the field value vould be empty* the field key could contain</definition>
        <argsstring></argsstring>
        <name>contain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_build/html/_sources/code_documentation/Oracle.rst.txt" line="24" column="22" bodyfile="_build/html/_sources/code_documentation/Oracle.rst.txt" bodystart="3" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_oracle_8rst_8txt_1a1ad3cdea492e406da7a9b2a26eda4783" prot="public" static="no" mutable="no">
        <type>Code docs *simulation cpp to simulate a disturbance in the hint recognition by the sensing part *the field <ref refid="simulation_8cpp_1a0049a8a39c319bf1470f36c9e0f75abd" kindref="member">key</ref> could be empty *the field value vould be empty *the field <ref refid="simulation_8cpp_1a0049a8a39c319bf1470f36c9e0f75abd" kindref="member">key</ref> could and also value could How to check if the hint <ref refid="_oracle_8rst_8txt_1ad813c08dc0807c51674c4a77b732a8c8" kindref="member">is</ref> valid to check whether a specific ID <ref refid="_oracle_8rst_8txt_1ad813c08dc0807c51674c4a77b732a8c8" kindref="member">is</ref> the solution of the</type>
        <definition>Code docs* simulation cpp to simulate a disturbance in the hint recognition by the sensing part* the field key could be empty* the field value vould be empty* the field key could and also value could How to check if the hint is valid to check whether a specific ID is the solution of the mystery</definition>
        <argsstring></argsstring>
        <name>mystery</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_build/html/_sources/code_documentation/Oracle.rst.txt" line="30" column="55" bodyfile="_build/html/_sources/code_documentation/Oracle.rst.txt" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_oracle_8rst_8txt_1a9107981f4bf5ab9f24785a661dddb14a" prot="public" static="no" mutable="no">
        <type>Code docs *simulation cpp to simulate a disturbance in the hint recognition by the sensing part *the field <ref refid="simulation_8cpp_1a0049a8a39c319bf1470f36c9e0f75abd" kindref="member">key</ref> could be empty *the field value vould be empty *the field <ref refid="simulation_8cpp_1a0049a8a39c319bf1470f36c9e0f75abd" kindref="member">key</ref> could and also value could How to check if the hint <ref refid="_oracle_8rst_8txt_1ad813c08dc0807c51674c4a77b732a8c8" kindref="member">is</ref> valid to check whether a specific ID <ref refid="_oracle_8rst_8txt_1ad813c08dc0807c51674c4a77b732a8c8" kindref="member">is</ref> the solution of the call the service *oracle_solution *of type erl2 Oracle Here s the prototype of the</type>
        <definition>Code docs* simulation cpp to simulate a disturbance in the hint recognition by the sensing part* the field key could be empty* the field value vould be empty* the field key could and also value could How to check if the hint is valid to check whether a specific ID is the solution of the call the service* oracle_solution* of type erl2 Oracle Here s the prototype of the service</definition>
        <argsstring></argsstring>
        <name>service</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_build/html/_sources/code_documentation/Oracle.rst.txt" line="30" column="142" bodyfile="_build/html/_sources/code_documentation/Oracle.rst.txt" bodystart="41" bodyend="-1"/>
        <referencedby refid="my__simulation_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="my__simulation_8cpp" startline="75" endline="184">main</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_oracle_8rst_8txt_1a7aaa8766803123d5cd0be6497569795f" prot="public" static="no" mutable="no">
        <type>Code docs *simulation cpp to simulate a disturbance in the hint recognition by the sensing part *the field <ref refid="simulation_8cpp_1a0049a8a39c319bf1470f36c9e0f75abd" kindref="member">key</ref> could be empty *the field value vould be empty *the field <ref refid="simulation_8cpp_1a0049a8a39c319bf1470f36c9e0f75abd" kindref="member">key</ref> could and also value could How to check if the hint <ref refid="_oracle_8rst_8txt_1ad813c08dc0807c51674c4a77b732a8c8" kindref="member">is</ref> valid to check whether a specific ID <ref refid="_oracle_8rst_8txt_1ad813c08dc0807c51674c4a77b732a8c8" kindref="member">is</ref> the solution of the call the <ref refid="_oracle_8rst_8txt_1a9107981f4bf5ab9f24785a661dddb14a" kindref="member">service</ref> *oracle_solution *of type erl2 Oracle Here s the prototype of the *the ID of the hint <ref refid="_oracle_8rst_8txt_1ad813c08dc0807c51674c4a77b732a8c8" kindref="member">is</ref> from to *the orale knows only the IDs and not the corresponding solution in terms of</type>
        <definition>Code docs* simulation cpp to simulate a disturbance in the hint recognition by the sensing part* the field key could be empty* the field value vould be empty* the field key could and also value could How to check if the hint is valid to check whether a specific ID is the solution of the call the service* oracle_solution* of type erl2 Oracle Here s the prototype of the * the ID of the hint is from to* the orale knows only the IDs and not the corresponding solution in terms of where</definition>
        <argsstring></argsstring>
        <name>where</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_build/html/_sources/code_documentation/Oracle.rst.txt" line="44" column="78" bodyfile="_build/html/_sources/code_documentation/Oracle.rst.txt" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_oracle_8rst_8txt_1ace87468ba086db5aa9b64bcdaaa9c142" prot="public" static="no" mutable="no">
        <type>Code docs *simulation cpp to simulate a disturbance in the hint recognition by the sensing part *the field <ref refid="simulation_8cpp_1a0049a8a39c319bf1470f36c9e0f75abd" kindref="member">key</ref> could be empty *the field value vould be empty *the field <ref refid="simulation_8cpp_1a0049a8a39c319bf1470f36c9e0f75abd" kindref="member">key</ref> could and also value could How to check if the hint <ref refid="_oracle_8rst_8txt_1ad813c08dc0807c51674c4a77b732a8c8" kindref="member">is</ref> valid to check whether a specific ID <ref refid="_oracle_8rst_8txt_1ad813c08dc0807c51674c4a77b732a8c8" kindref="member">is</ref> the solution of the call the <ref refid="_oracle_8rst_8txt_1a9107981f4bf5ab9f24785a661dddb14a" kindref="member">service</ref> *oracle_solution *of type erl2 Oracle Here s the prototype of the *the ID of the hint <ref refid="_oracle_8rst_8txt_1ad813c08dc0807c51674c4a77b732a8c8" kindref="member">is</ref> from to *the orale knows only the IDs and not the corresponding solution in terms of what and who in</type>
        <definition>Code docs* simulation cpp to simulate a disturbance in the hint recognition by the sensing part* the field key could be empty* the field value vould be empty* the field key could and also value could How to check if the hint is valid to check whether a specific ID is the solution of the call the service* oracle_solution* of type erl2 Oracle Here s the prototype of the * the ID of the hint is from to* the orale knows only the IDs and not the corresponding solution in terms of what and who in particular</definition>
        <argsstring></argsstring>
        <name>particular</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_build/html/_sources/code_documentation/Oracle.rst.txt" line="46" column="4" bodyfile="_build/html/_sources/code_documentation/Oracle.rst.txt" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_oracle_8rst_8txt_1ad813c08dc0807c51674c4a77b732a8c8" prot="public" static="no" mutable="no">
        <type>Code docs *simulation cpp to simulate a disturbance in the hint recognition by the sensing part *the field <ref refid="simulation_8cpp_1a0049a8a39c319bf1470f36c9e0f75abd" kindref="member">key</ref> could be empty *the field value vould be empty *the field <ref refid="simulation_8cpp_1a0049a8a39c319bf1470f36c9e0f75abd" kindref="member">key</ref> could and also value could How to check if the hint is valid to check whether a specific ID is the solution of the call the <ref refid="_oracle_8rst_8txt_1a9107981f4bf5ab9f24785a661dddb14a" kindref="member">service</ref> *oracle_solution *of type erl2 Oracle Here s the prototype of the *the ID of the hint is from to *the orale knows only the IDs and not the corresponding solution in terms of what and who in *the *<ref refid="simulation_8cpp_1a90c5d03e068ddae91702223f47eff712" kindref="member">winID</ref> *</type>
        <definition>Code docs* simulation cpp to simulate a disturbance in the hint recognition by the sensing part* the field key could be empty* the field value vould be empty* the field key could and also value could How to check if the hint is valid to check whether a specific ID is the solution of the call the service* oracle_solution* of type erl2 Oracle Here s the prototype of the * the ID of the hint is from to* the orale knows only the IDs and not the corresponding solution in terms of what and who in * the* winID* is</definition>
        <argsstring></argsstring>
        <name>is</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="_build/html/_sources/code_documentation/Oracle.rst.txt" line="48" column="12" bodyfile="_build/html/_sources/code_documentation/Oracle.rst.txt" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal">Code<sp/>docs<sp/>--<sp/>*simulation.cpp*</highlight></codeline>
<codeline lineno="3" refid="_oracle_8rst_8txt_1a9082c3d01dfdff845db35ba873e06318" refkind="member"><highlight class="normal">==============================</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">How<sp/>to<sp/>receive<sp/>a<sp/>hint</highlight></codeline>
<codeline lineno="7"><highlight class="normal">----------------------</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">the<sp/>node<sp/>publishes<sp/>the<sp/>hint<sp/>(message<sp/>*erl2/ErlOracle*)<sp/>through<sp/>the<sp/>topic<sp/>*/oracle_hint*.<sp/>Here</highlight><highlight class="stringliteral">&apos;s<sp/>the<sp/>message<sp/>prototype:</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral">..<sp/>code-block::</highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>int32<sp/>ID</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>string<sp/>key</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>string<sp/>value</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral">the<sp/>hint<sp/>is<sp/>sent<sp/>each<sp/>time<sp/>the<sp/>*cluedo_link*<sp/>is<sp/>near<sp/>enough<sp/>to<sp/>a<sp/>marker.<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral">..<sp/>note::</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>oracle<sp/>could<sp/>send<sp/>wrong<sp/>informations,<sp/>to<sp/>simulate<sp/>a<sp/>disturbance<sp/>in<sp/>the<sp/>hint<sp/>recognition<sp/>by<sp/>the<sp/>sensing<sp/>part.<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>*<sp/>the<sp/>field<sp/>&quot;key&quot;<sp/>could<sp/>be<sp/>empty</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>*<sp/>the<sp/>field<sp/>&quot;value&quot;<sp/>vould<sp/>be<sp/>empty</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>*<sp/>the<sp/>field<sp/>&quot;key&quot;<sp/>could<sp/>contain<sp/>&quot;-1&quot;,<sp/>and<sp/>also<sp/>&quot;value&quot;<sp/>could<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral">How<sp/>to<sp/>check<sp/>if<sp/>the<sp/>hint<sp/>is<sp/>valid</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral">----------------------------------</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="30" refid="_oracle_8rst_8txt_1a1ad3cdea492e406da7a9b2a26eda4783" refkind="member"><highlight class="stringliteral">to<sp/>check<sp/>whether<sp/>a<sp/>specific<sp/>ID<sp/>is<sp/>the<sp/>solution<sp/>of<sp/>the<sp/>mystery,<sp/>call<sp/>the<sp/>service<sp/>*/oracle_solution*<sp/>of<sp/>type<sp/>``erl2/Oracle``.<sp/>Here&apos;</highlight><highlight class="normal">s<sp/>the<sp/>prototype<sp/>of<sp/>the<sp/><ref refid="_oracle_8rst_8txt_1a9107981f4bf5ab9f24785a661dddb14a" kindref="member">service</ref>:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">..<sp/>code-block::</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>---</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>ID</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">Hints<sp/>generation</highlight></codeline>
<codeline lineno="39"><highlight class="normal">-----------------</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="_oracle_8rst_8txt_1a9107981f4bf5ab9f24785a661dddb14a" refkind="member"><highlight class="normal">referring<sp/>to<sp/>the<sp/>code,<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">*<sp/>the<sp/>ID<sp/>of<sp/>the<sp/>hint<sp/><ref refid="_oracle_8rst_8txt_1ad813c08dc0807c51674c4a77b732a8c8" kindref="member">is</ref><sp/>from<sp/>0<sp/>to<sp/>5</highlight></codeline>
<codeline lineno="44" refid="_oracle_8rst_8txt_1a7aaa8766803123d5cd0be6497569795f" refkind="member"><highlight class="normal">*<sp/>the<sp/>orale<sp/>knows<sp/>only<sp/>the<sp/>IDs<sp/>and<sp/>not<sp/>the<sp/>corresponding<sp/>solution<sp/>in<sp/>terms<sp/>of<sp/><ref refid="_oracle_8rst_8txt_1a7aaa8766803123d5cd0be6497569795f" kindref="member">where</ref>,<sp/>what<sp/>and<sp/>who</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="_oracle_8rst_8txt_1ace87468ba086db5aa9b64bcdaaa9c142" refkind="member"><highlight class="normal">in<sp/><ref refid="_oracle_8rst_8txt_1ace87468ba086db5aa9b64bcdaaa9c142" kindref="member">particular</ref>,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="_oracle_8rst_8txt_1ad813c08dc0807c51674c4a77b732a8c8" refkind="member"><highlight class="normal">*<sp/>the<sp/>*<ref refid="my__simulation_8cpp_1a90c5d03e068ddae91702223f47eff712" kindref="member">winID</ref>*<sp/><ref refid="_oracle_8rst_8txt_1ad813c08dc0807c51674c4a77b732a8c8" kindref="member">is</ref>,<sp/>randomly<sp/>choosen<sp/>from<sp/>0<sp/>to<sp/>5</highlight></codeline>
<codeline lineno="49"><highlight class="normal">*<sp/>the<sp/>array<sp/>*<ref refid="my__simulation_8cpp_1a37d4a0b625b8b9583adf9362f5aae971" kindref="member">uIDs</ref>*<sp/>contains<sp/>the<sp/>inconsistent<sp/>IDs</highlight></codeline>
    </programlisting>
    <location file="_build/html/_sources/code_documentation/Oracle.rst.txt"/>
  </compounddef>
</doxygen>
